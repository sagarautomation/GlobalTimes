package com.opentesting.utils;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Objects;
import java.util.Properties;

import com.opentesting.constants.FrameworkConstants;
import com.opentesting.enums.ConfigProperties;

public final class PropertyUtils {

	private  PropertyUtils()
	{

	}

	private static Properties prop=new Properties();
	private static HashMap<String, String>CONFIGMAP=new HashMap<String,String>();



	static
	{
		try {
			FileInputStream fi=new FileInputStream(FrameworkConstants.getConfigpath());
			prop.load(fi);
			for(Entry<Object, Object> kv :prop.entrySet())
			{
				CONFIGMAP.put(String.valueOf(kv.getKey()), String.valueOf(kv.getValue()).trim());
			}


		} 
		catch(IOException ex)
		{

		}

	}


	public static String getValfromMap(ConfigProperties key) throws Exception
	{

		System.out.println(Objects.isNull(key));
		if(Objects.isNull(key)||Objects.isNull(CONFIGMAP.get(key)))
		{
			throw new Exception("The key"+key+"is not found in the property file");

		}

		return CONFIGMAP.get(key.name().toLowerCase());


	}





	public static String get(ConfigProperties key) throws Exception
	{
		String value=null;
		value= prop.getProperty(key.toString().toLowerCase());
		System.out.println(value);
		if(Objects.isNull(value))
		{
			throw new Exception("The key"+key+"is not found in the property file");
		}



		return value;

	}

}
