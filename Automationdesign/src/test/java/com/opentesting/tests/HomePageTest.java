package com.opentesting.tests;

import java.util.List;
import java.util.Objects;

import org.assertj.core.api.Assertions;
import org.junit.Assert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;
import org.testng.annotations.Test;

import com.opentesting.driver.Driver;
import com.opentesting.driver.DriverManager;

public class HomePageTest extends BaseTest {
	
	
	/*Validate whether title is containing Google Search or google search.
	 Validate that title is not null and length of title is greater then 15 and less than 100.
	 Check for links in the pages---> Testing mini bytes -Youtube
	 number of links displayed is exactly 10 or 15.
	 */
	
	private HomePageTest() {
		
	}
	
	
	
	@Test
	public void test3()
	{

		DriverManager.getDriver().findElement(By.name("q")).sendKeys("Testing mini bytes - YouTube", Keys.ENTER);
		String title=DriverManager.getDriver().getTitle();
		System.out.println("Title is"+title);
		
		//with Assert class
		
		
		
		/*Assert.assertTrue(Objects.nonNull(title));
		Assert.assertTrue(title.length()>10);
		Assert.assertTrue(title.toLowerCase().contains("google search"));
		Assert.assertTrue(title.toLowerCase().matches("\\w.*"+"google search"));
		List<WebElement>elements=DriverManager.getDriver().findElements(By.xpath("//h3"));
		boolean found=elements.
		stream().
		anyMatch(el->el.getText().equalsIgnoreCase("Testing mini bytes - YouTube"));
		System.out.println(found);*/
		
		
		//with AssertJ..
		//Title isTesting mini bytes - YouTube - Google ????

		Assertions.assertThat(title)
		.isNotNull()
		.isNotBlank()
		.isNotEmpty()
		.as("It does not contain expected text").containsIgnoringCase("Google");
		List<WebElement>elements=DriverManager.getDriver().findElements(By.xpath("//h3"));
		Assertions.assertThat(elements)
		.hasSize(10)
		.extracting(el->el.getText())
		.contains("Testing Mini Bytes - YouTube");
		
		
		
		
		
	}

}
