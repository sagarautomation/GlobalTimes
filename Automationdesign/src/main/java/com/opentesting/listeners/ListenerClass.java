package com.opentesting.listeners;

import java.io.IOException;
import java.util.Arrays;

import org.testng.ISuite;
import org.testng.ISuiteListener;
import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;

import com.opentesting.reports.ExtentLogger;
import com.opentesting.reports.ExtentsReport;

public class ListenerClass implements ITestListener,ISuiteListener {

	@Override
	public void onFinish(ITestContext context) {
		
	}

	@Override
	public void onStart(ITestContext context) {
		
	}

	@Override
	public void onTestFailedButWithinSuccessPercentage(ITestResult result) {
		
	}

	@Override
	public void onTestFailedWithTimeout(ITestResult result) {
	}

	@Override
	public void onTestFailure(ITestResult result) {
		
		try {
			ExtentLogger.fail(result.getMethod().getMethodName()+"is failed", true);
			ExtentLogger.fail(result.getThrowable().toString());
			ExtentLogger.fail(Arrays.toString(result.getThrowable().getStackTrace()));
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		

	}

	@Override
	public void onTestSkipped(ITestResult result) {
		ExtentLogger.skip(result.getMethod().getMethodName()+"is skipped");

		
	}

	@Override
	public void onTestStart(ITestResult result) {
		ExtentsReport.createTest(result.getMethod().getDescription());
		
		
	}

	@Override
	public void onTestSuccess(ITestResult result) {
		ExtentLogger.pass(result.getMethod().getMethodName()+  "is passed");
		
	}

	@Override
	public void onFinish(ISuite suite) {
		
			try {
				ExtentsReport.flushReports();
			} catch (Exception e) {
				e.printStackTrace();
			}
		

	}

	@Override
	public void onStart(ISuite suite) {
		
		try {
			ExtentsReport.initReports();
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
